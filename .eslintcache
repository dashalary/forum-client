[{"/Users/dashakondratieva/Development/code/forum-client/src/index.js":"1","/Users/dashakondratieva/Development/code/forum-client/src/App.js":"2","/Users/dashakondratieva/Development/code/forum-client/src/reducers/index.js":"3","/Users/dashakondratieva/Development/code/forum-client/src/reducers/posts.js":"4","/Users/dashakondratieva/Development/code/forum-client/src/containers/PostForm.js":"5","/Users/dashakondratieva/Development/code/forum-client/src/actions/posts.js":"6","/Users/dashakondratieva/Development/code/forum-client/src/components/posts/PostList.js":"7","/Users/dashakondratieva/Development/code/forum-client/src/components/posts/Post.js":"8","/Users/dashakondratieva/Development/code/forum-client/src/components/NavBar.js":"9","/Users/dashakondratieva/Development/code/forum-client/src/components/Home.js":"10"},{"size":870,"mtime":1612200919145,"results":"11","hashOfConfig":"12"},{"size":1813,"mtime":1612279907984,"results":"13","hashOfConfig":"12"},{"size":160,"mtime":1612117759928,"results":"14","hashOfConfig":"12"},{"size":779,"mtime":1612204590048,"results":"15","hashOfConfig":"12"},{"size":3011,"mtime":1612282561224,"results":"16","hashOfConfig":"12"},{"size":686,"mtime":1612204244843,"results":"17","hashOfConfig":"12"},{"size":826,"mtime":1612280136671,"results":"18","hashOfConfig":"12"},{"size":605,"mtime":1612213683051,"results":"19","hashOfConfig":"12"},{"size":674,"mtime":1612280632668,"results":"20","hashOfConfig":"12"},{"size":160,"mtime":1612210353575,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"iijxcb",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/dashakondratieva/Development/code/forum-client/src/index.js",["46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n// import NavBar from './components/NavBar';\n// import Home from './components/Home';\n// import PostList from './components/posts/PostList';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk))) // to be able to use getState and dispatch\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n",["47","48"],"/Users/dashakondratieva/Development/code/forum-client/src/App.js",["49"],"import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport PostForm from './containers/PostForm'\nimport { getPosts } from './actions/posts'\nimport PostList from './components/posts/PostList'\nimport Modal from 'react-bootstrap/Modal'\nimport {Route, Switch} from 'react-router-dom'\nimport Post from './components/posts/Post'\nimport NavBar from './components/NavBar'\nimport Home from './components/Home'\n\n\n// handleLoading = () => {\n//   if (this.props.loading) {\n//     return <div>Loading posts...</div>\n//   } else {\n//     return <PostList posts={this.props.posts} />\n//   }\n// }\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getPosts()\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        {/* <div className=\"row title justify-content-center\" style={{ paddingTop: '12px' }}>\n          {/* <h1>Forum</h1> */}\n        {/* </div>\n        <hr />\n        \n        <h2>Make a Post</h2>\n        <br></br>\n        <PostForm />\n        <hr />\n        <h2>Posts</h2> */}\n        {/* {this.handleLoading()} */}\n        {/* <PostList /> */} \n            <NavBar/>\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/posts/new' component={PostForm}/>\n                <Route path='/posts/:id' render={(routerProps) => <Post {...routerProps} posts={this.props.posts}/>}/>\n                <Route exact path='/posts' render={(routerProps) => <PostList {...routerProps} posts={this.props.posts}/>}/>\n            </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(\"I am state\", state);\n  return {\n    posts: state.postReducer.posts,\n    loading: state.postReducer.loading\n  }\n}\n\nexport default connect(mapStateToProps, { getPosts })(App)\n","/Users/dashakondratieva/Development/code/forum-client/src/reducers/index.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/reducers/posts.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/containers/PostForm.js",["50"],"/Users/dashakondratieva/Development/code/forum-client/src/actions/posts.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/posts/PostList.js",["51","52"],"/Users/dashakondratieva/Development/code/forum-client/src/components/posts/Post.js",["53"],"import React from 'react';\n\nconst Post = (props) => {\n    let post = props.posts.filter(p => p.id == props.match.params.id)[0]\n    return (\n        <div>\n            <div className=\"card card-inverse card-success card-primary mb-3 text-center\">\n                <div className=\"card-block\">\n                    <blockquote className=\"card-blockquote\">\n                    <p>{post.content}</p>\n                        <footer>by: <cite title=\"Source Title\">{post.author}</cite></footer>\n                    </blockquote>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","/Users/dashakondratieva/Development/code/forum-client/src/components/NavBar.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/Home.js",[],{"ruleId":"54","severity":1,"message":"55","line":13,"column":3,"nodeType":"56","messageId":"57","endLine":13,"endColumn":8},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":18},{"ruleId":"54","severity":1,"message":"64","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":12},{"ruleId":"54","severity":1,"message":"55","line":3,"column":9,"nodeType":"56","messageId":"57","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":4,"column":45,"nodeType":"67","messageId":"68","endLine":4,"endColumn":47},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'Modal' is defined but never used.","'Redirect' is defined but never used.","'Post' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]