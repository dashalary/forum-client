[{"/Users/dashakondratieva/Development/code/forum-client/src/index.js":"1","/Users/dashakondratieva/Development/code/forum-client/src/App.js":"2","/Users/dashakondratieva/Development/code/forum-client/src/reducers/index.js":"3","/Users/dashakondratieva/Development/code/forum-client/src/reducers/posts.js":"4","/Users/dashakondratieva/Development/code/forum-client/src/containers/PostForm.js":"5","/Users/dashakondratieva/Development/code/forum-client/src/actions/posts.js":"6","/Users/dashakondratieva/Development/code/forum-client/src/components/posts/PostList.js":"7","/Users/dashakondratieva/Development/code/forum-client/src/components/posts/Post.js":"8","/Users/dashakondratieva/Development/code/forum-client/src/components/NavBar.js":"9","/Users/dashakondratieva/Development/code/forum-client/src/components/Home.js":"10","/Users/dashakondratieva/Development/code/forum-client/src/containers/CommentsContainer.js":"11","/Users/dashakondratieva/Development/code/forum-client/src/components/comments/Comments.js":"12","/Users/dashakondratieva/Development/code/forum-client/src/containers/CommentForm.js":"13","/Users/dashakondratieva/Development/code/forum-client/src/components/posts/EditPost.js":"14","/Users/dashakondratieva/Development/code/forum-client/src/containers/PostsContainer.js":"15","/Users/dashakondratieva/Development/code/forum-client/src/components/LikeButton.js":"16","/Users/dashakondratieva/Development/code/forum-client/src/components/DeleteButton.js":"17","/Users/dashakondratieva/Development/code/forum-client/src/components/BackButton.js":"18"},{"size":993,"mtime":1612561041335,"results":"19","hashOfConfig":"20"},{"size":329,"mtime":1612549955592,"results":"21","hashOfConfig":"20"},{"size":160,"mtime":1612286719752,"results":"22","hashOfConfig":"20"},{"size":2745,"mtime":1612473946038,"results":"23","hashOfConfig":"20"},{"size":2997,"mtime":1612636843424,"results":"24","hashOfConfig":"20"},{"size":2081,"mtime":1612544300772,"results":"25","hashOfConfig":"20"},{"size":975,"mtime":1612565082920,"results":"26","hashOfConfig":"20"},{"size":1715,"mtime":1612566848121,"results":"27","hashOfConfig":"20"},{"size":872,"mtime":1612564801496,"results":"28","hashOfConfig":"20"},{"size":220,"mtime":1612554197436,"results":"29","hashOfConfig":"20"},{"size":666,"mtime":1612548199386,"results":"30","hashOfConfig":"20"},{"size":1235,"mtime":1612635965903,"results":"31","hashOfConfig":"20"},{"size":2075,"mtime":1612636913162,"results":"32","hashOfConfig":"20"},{"size":3027,"mtime":1612637006292,"results":"33","hashOfConfig":"20"},{"size":1792,"mtime":1612560108854,"results":"34","hashOfConfig":"20"},{"size":625,"mtime":1612562124259,"results":"35","hashOfConfig":"20"},{"size":210,"mtime":1612550382822,"results":"36","hashOfConfig":"20"},{"size":258,"mtime":1612566396499,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"iijxcb",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"41"},"/Users/dashakondratieva/Development/code/forum-client/src/index.js",["84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n// import NavBar from './components/NavBar';\n// import Home from './components/Home';\n// import PostList from './components/posts/PostList';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk))) // to be able to use getState and dispatch\n// const BrowserHistory = require('react-router/lib/BrowserHistory').default;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n",["85","86"],"/Users/dashakondratieva/Development/code/forum-client/src/App.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/reducers/index.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/reducers/posts.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/containers/PostForm.js",["87"],"import React, { Component } from 'react';\nimport { addPost } from '../actions/posts';\nimport { connect } from 'react-redux';\nimport { Button, Form, Header, Input, TextArea } from 'semantic-ui-react'\n\nclass PostForm extends Component {\n\n    state = {\n        post: {\n            content: \"\",\n            author: \"\",\n            likes: 0\n        },\n        loading: false\n    }\n\n    handleOnChangeContent = (event) => {\n        this.setState({...this.state,\n            post: {...this.state.post,\n                content: event.target.value\n            }\n        })\n    }\n\n    handleOnChangeAuthor = event => {\n        this.setState({...this.state,\n            post: {...this.state.post,\n            author: event.target.value\n            }\n        })\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault()\n        const post = {...this.state.post}\n        if (post.content === '' || post.author === '') {\n          alert('Please fill in both author and content fields before hitting submit.')\n      } else {\n        this.props.addPost(post)\n        this.props.history.push('/posts');\n        this.setState({\n            post: {\n                content: \"\",\n                author: \"\",\n                likes: 0\n            },\n            loading: false,\n        })\n      }\n    }\n\n    render() {\n        return (\n            <div>\n               <div className=\"card card-inverse card-success card-primary mb-3 text-center\">\n                <div className=\"card-block\">\n                    <blockquote className=\"card-blockquote\">\n              {/* id='form-input-control-content' control={Input} error={{content: 'Content field cannot be blank.', pointing: 'below'}} */}\n            <Form size=\"small\" onSubmit={this.handleOnSubmit}>\n            <Form.Field >\n            <br></br>\n            <Header as=\"h3\" htmlFor=\"content\">Content: </Header>\n            <br></br>\n                      <TextArea\n                        placeholder=\"Your thoughts here\"\n                        cols=\"6\"\n                        name=\"content\"\n                        value={this.state.content}\n                        onChange={this.handleOnChangeContent}\n                      />\n            </Form.Field>\n            <br></br>\n            <Form.Field required>\n            <Header as=\"h3\" htmlFor=\"author\">Author: </Header>\n            <br></br>\n                      <TextArea\n                        placeholder=\"Your name here\"\n                        cols=\"6\"\n                        type=\"text\"\n                        name=\"author\"\n                        value={this.state.author}\n                        onChange={this.handleOnChangeAuthor}\n                      />\n            </Form.Field>\n            <br></br>\n            <Button type=\"submit\" color=\"pink\">Add Post</Button>\n            {/* </Form.Group> */}\n            </Form>\n            </blockquote>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { addPost })(PostForm);","/Users/dashakondratieva/Development/code/forum-client/src/actions/posts.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/posts/PostList.js",["88"],"import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react'\nimport {Route, Link} from 'react-router-dom'\n\nclass PostList extends Component {\n    render() {\n        const { posts } = this.props;\n        const postList = posts.map(post => {\n            return (\n                <div key={post.id}>\n                    <Card>\n                    <br></br>\n                    <Link to={`/posts/${post.id}`}>{post.content}</Link>\n                    <br></br>\n                    </Card>\n                   <br></br>\n                </div>\n            )\n        })\n        \n        return (\n                <div className=\"card card-inverse card-success card-primary mb-3 text-center\">\n                <div className=\"card-block\">\n                    <blockquote className=\"card-blockquote\">\n                        {postList}\n                    </blockquote>\n                </div>\n                </div>\n            );\n      }\n}\n\nexport default PostList","/Users/dashakondratieva/Development/code/forum-client/src/components/posts/Post.js",["89","90","91","92","93"],"import React, {Component} from 'react';\nimport CommentsContainer from '../../containers/CommentsContainer'\nimport {Route, Link} from 'react-router-dom'\nimport EditPost from './EditPost'\nimport LikeButton from '../LikeButton'\nimport {connect} from 'react-redux'\nimport {likePost} from '../../actions/posts'\nimport { Card } from 'semantic-ui-react'\n\nclass Post extends Component {\n    \n    handleClick = (e) => {\n        let post = this.props.posts.filter(p => p.id == this.props.match.params.id)[0]\n       this.props.likePost({...post, likes: post.likes + 1})\n    }\n\n    render() {\n\n    let post = this.props.posts.filter(p => p.id == this.props.match.params.id)[0]\n\n    return (\n        <div>\n            <div className=\"card card-inverse card-success card-primary mb-3 text-center\">\n                <div className=\"card-block\">\n                    <blockquote className=\"card-blockquote\">\n                        <br></br>\n                    <p>{post.content}</p>\n                        <footer>by: <cite title=\"Source Title\">{post.author}</cite></footer>\n                        <br></br>\n                        <LikeButton post={post} handleOnClick={(e) => this.handleClick(e)} />\n                        <br></br>\n                        <br></br>\n                        <Link to={`/posts/${post.id}/edit`}>Edit Post</Link>\n                        <br></br>\n                        <br></br>\n                        <CommentsContainer post={post}/><br/>\n                    </blockquote>\n                </div>\n            </div>\n        </div>\n    )\n}}\n\n\nconst mapStateToProps = state => {\n    return {\n      posts: state.postReducer.posts\n    }\n}\n\nexport default connect(mapStateToProps, {likePost})(Post)","/Users/dashakondratieva/Development/code/forum-client/src/components/NavBar.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/Home.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/containers/CommentsContainer.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/comments/Comments.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/containers/CommentForm.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/posts/EditPost.js",["94"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {editPost} from '../../actions/posts'\nimport BackButton from '../BackButton'\nimport { Button, Form, Label, Header } from 'semantic-ui-react'\n\nclass EditPost extends React.Component {\n\n    state = {\n        post: {\n            content: \"\",\n            author: \"\",\n            likes: 0\n        },\n        loading: false\n    }\n\n    handleGoBack = (e) => {\n      this.props.history.goBack()\n    }\n   \n    handleOnChangeC = (event) => {\n        this.setState({...this.state,\n            post: {...this.state.post,\n            content: event.target.value\n            }\n        })\n    }\n\n    handleOnChangeA = (event) => {\n        this.setState({...this.state,\n            post: {...this.state.post,\n            author: event.target.value\n            }\n        })\n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault()\n        let post = {...this.state.post, id: this.props.match.params.id}\n        if (post.content === '' || post.author === '') {\n          alert('Please fill in both author and content fields before hitting submit.')\n        } else {\n          this.props.editPost(post)\n          this.setState({\n              post: {\n                  content: \"\",\n                  author: \"\",\n                  likes: 0\n              },\n              loading: false\n          })\n        }\n    }\n\n    render() {\n      const size = \"small\"\n\n        return (\n            <div>\n            <Form size={size} onSubmit={this.handleSubmit}>\n              <Form.Field>\n                    <br></br>\n                    <br></br>\n                    <Header as=\"h3\" htmlFor=\"content\" >Content:</Header>\n                    <br></br>\n                      <textarea\n                        cols=\"6\"\n                        placeholder=\"Your thoughts here\"\n                        className=\"form-control\"\n                        name=\"content\"\n                        value={this.state.content}\n                        onChange={this.handleOnChangeC}\n                      />\n                      </Form.Field>\n                      <br></br>\n                      <Form.Field>\n                    <Header as=\"h3\" htmlFor=\"author\">Author:</Header>\n                    <br></br>\n                      <textarea\n                        cols=\"6\"\n                        placeholder=\"Your name here\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"author\"\n                        value={this.state.author}\n                        onChange={this.handleOnChangeA}\n                      />\n                    </Form.Field>\n                    <br></br>\n                      <Button color=\"pink\" type=\"submit\">Edit Post</Button>\n                      <br></br>\n                      <br></br>\n                      <BackButton handleOnClick={(e) => this.handleGoBack(e)} />\n            </Form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { editPost })(EditPost)\n    ","/Users/dashakondratieva/Development/code/forum-client/src/containers/PostsContainer.js",[],"/Users/dashakondratieva/Development/code/forum-client/src/components/LikeButton.js",["95","96"],"import React, { Component } from 'react';\nimport { Button, Icon, Label } from 'semantic-ui-react'\n\nconst LikeButton = (props) => {\n\n    return (\n        <div>\n            <Button as='div' labelPosition='right' onClick={props.handleOnClick}>\n            <Button color='red'>\n                <Icon name='heart' />\n                Like\n            </Button>\n            <Label as='a' basic color='red' pointing='left'>\n                {props.post.likes}\n            </Label>\n            </Button>\n        </div>\n    )\n}\n\nexport default LikeButton\n\n{/* <button onClick={props.handleOnClick}>Likes: {props.post.likes}</button> */}","/Users/dashakondratieva/Development/code/forum-client/src/components/DeleteButton.js",["97"],"import React, { Component } from 'react';\n\n\nconst DeleteButton = (props) => {\n\n        return (\n            <button onClick={props.handleOnClick}>Delete Comment</button>\n        )\n}\n\nexport default DeleteButton",["98","99"],"/Users/dashakondratieva/Development/code/forum-client/src/components/BackButton.js",["100"],"import React, { Component } from 'react';\nimport {Button} from 'semantic-ui-react'\n\nconst BackButton = (props) => {\n\n    return (\n        <Button color=\"blue\" onClick={props.handleOnClick}>\n        Go Back\n        </Button>\n    )\n}\n\nexport default BackButton",{"ruleId":"101","severity":1,"message":"102","line":14,"column":3,"nodeType":"103","messageId":"104","endLine":14,"endColumn":8},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":4,"column":32,"nodeType":"103","messageId":"104","endLine":4,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"110","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"101","severity":1,"message":"111","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":13,"column":54,"nodeType":"114","messageId":"115","endLine":13,"endColumn":56},{"ruleId":"112","severity":1,"message":"113","line":19,"column":50,"nodeType":"114","messageId":"115","endLine":19,"endColumn":52},{"ruleId":"101","severity":1,"message":"116","line":5,"column":24,"nodeType":"103","messageId":"104","endLine":5,"endColumn":29},{"ruleId":"101","severity":1,"message":"117","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":23,"column":1,"nodeType":"120","messageId":"121","endLine":23,"endColumn":81},{"ruleId":"101","severity":1,"message":"117","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"105","replacedBy":"122"},{"ruleId":"107","replacedBy":"123"},{"ruleId":"101","severity":1,"message":"117","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'Input' is defined but never used.","'EditPost' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Label' is defined but never used.","'Component' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["124"],["125"],"no-global-assign","no-unsafe-negation"]